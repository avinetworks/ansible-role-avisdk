---

matrix:
  include:
    - language: python
      python: "2.7"
      install:
      - export AVI_CONTROLLER="10.10.28.132"
      - export AVI_USERNAME="admin"
      - export AVI_PASSWORD="avi123$%"
      - export API_VERSION="18.1.3"
      - export PYTHONPATH=$PWD
      - export ANSIBLE_LIBRARY=$PWD/
      - pip install vcrpy pytest ansible requests avisdk
      script:
      - cd $PYTHONPATH/tests/module_tests/
      - pytest ./ansible_tests.py -m travis -vvvv --color=yes

sudo: required
env:
  - distribution: centos
    version: 6
    init: /sbin/init
    run_opts: ""
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: fedora
    version: 24
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: ubuntu
    version: 16.04
    init: /sbin/init
    run_opts: ""
  - distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""

services:
  - docker

before_install:
  # - sudo apt-get update
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
  - container_id=$(mktemp)
  # Run container in detached state
  - 'sudo docker run --privileged --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Test role idempotence.
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
